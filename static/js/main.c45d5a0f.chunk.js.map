{"version":3,"sources":["components/Alert/Alert.js","components/Navbar/Navbar.js","components/TextForm/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","mode","type","role","text","lower","toLowerCase","charAt","toUpperCase","substring","capitalize","msg","Navbar","home","enableDark","btnText","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","htmlFor","TextForm","showAlert","useState","setText","style","backgroundColor","color","value","rows","onChange","event","target","newText","toLocaleLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setBtnText","setAlert","message","setTimeout","body","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yKAgBeA,EAdD,SAAEC,GAOZ,OACIA,EAAMC,OAAS,sBAAKC,UAAS,sBAAkC,UAAfF,EAAMG,KAAmB,UAAiC,WAArBH,EAAMC,MAAMG,KAAoB,SAAgC,YAArBJ,EAAMC,MAAMG,KAAqB,UAAY,SAAhJ,gCAA0LC,KAAK,QAA7M,UACX,iCAPW,SAAEC,GAEjB,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAQ,GAAIC,cAAgBH,EAAMI,UAAW,GAI5CC,CAAYZ,EAAMC,MAAMG,QADvB,IAC2CJ,EAAMC,MAAMY,QC6B/DC,EArCA,SAAEd,GAChB,IACWG,EAAoCH,EAApCG,KAAMY,EAA8Bf,EAA9Be,KAAMC,EAAwBhB,EAAxBgB,WAAYC,EAAYjB,EAAZiB,QAEhC,OACI,mCACI,qBAAKf,UAAS,yCAAsCC,EAAtC,eAAmDA,GAAjE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAegB,KAAK,IAAjC,SAAuCH,IACvC,wBAAQb,UAAU,iBAAiBE,KAAK,SAASe,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAA5L,SACI,sBAAMrB,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BsB,GAAG,yBAA7C,SACI,qBAAItB,UAAU,kCAAd,UACI,oBAAIA,UAAU,oBAAoBgB,KAAK,QAAvC,kBAGA,oBAAIhB,UAAU,oBAAoBgB,KAAK,SAAvC,wBASR,sBAAKhB,UAAS,sCAA4C,UAATC,EAAmB,OAAS,SAA7E,UACI,uBAAOD,UAAS,8BAAoC,UAATC,EAAmB,OAAS,SAAaC,KAAK,WAAWoB,GAAG,aAAaC,QAAUT,IAC9H,uBAAOU,QAAQ,aAAf,SAA8BT,eC8CvCU,EA3EE,SAAC,GACjB,IADoBxB,EACrB,EADqBA,KAAMyB,EAC3B,EAD2BA,UAC3B,EAC8BC,mBAAU,IADxC,mBACYvB,EADZ,KACkBwB,EADlB,KAqDI,OACI,qCACI,sBAAK5B,UAAU,iBAAf,UACI,uBAAOwB,QAAQ,OAAOxB,UAAU,aAAhC,SAA6C,oDAC7C,0BAAUA,UAAU,eAAe6B,MAAQ,CAAEC,gBAA0B,SAAT7B,EAAkB,QAAU,QAAS8B,MAAgB,SAAT9B,EAAkB,QAAU,SAAYqB,GAAG,OAAOU,MAAQ5B,EAAO6B,KAAK,IAAIC,SAjBzK,SAAEC,GAErB,IAAMH,EAAQG,EAAMC,OAAOJ,MAC3BJ,EAASI,MAeD,wBAAQhC,UAAU,uBAAuBuB,QAxD/B,WAElB,IAAMc,EAAUjC,EAAKI,cACrBoB,EAASS,GACTX,EAAW,oBAAqB,YAoDxB,uBACA,wBAAQ1B,UAAU,uBAAuBuB,QAlD/B,WAElB,IAAMc,EAAUjC,EAAKkC,oBACrBV,EAASS,GACTX,EAAW,oBAAqB,YA8CxB,uBACA,wBAAQ1B,UAAU,uBAAuBuB,QA5C5B,WAGrBK,EADc,IAEdF,EAAW,kBAAmB,WAwCtB,mBACA,wBAAQ1B,UAAU,uBAAuBuB,QAtClC,WAGf,IAAMnB,EAAOmC,SAASC,eAAgB,QAClB,KAAfpC,EAAK4B,OAA+B,MAAf5B,EAAK4B,MAE3BN,EAAW,4BAA6B,YAGxCtB,EAAKqC,SACLC,UAAUC,UAAUC,UAAWxC,EAAK4B,OACpCN,EAAW,cAAe,aA2BtB,kBACA,wBAAQ1B,UAAU,uBAAuBuB,QAhB5B,WAErB,IAAMc,EAAUjC,EAAKyC,MAAO,QAC5BjB,EAASS,EAAQS,KAAM,MACvBpB,EAAW,qBAAsB,YAYzB,6BAEJ,sBAAK1B,UAAU,YAAf,UACI,mCAAK,wBAAQA,UAAU,WAAlB,SAAwC,KAATI,EAAc,EAAIA,EAAKyC,MAAO,KAAME,SAAxE,cAAoG,wBAAQ/C,UAAU,WAAlB,SAA+BI,EAAK2C,SAAxI,qBACA,mCAAK,wBAAQ/C,UAAU,cAAlB,SAAkC,KAAQI,EAAKyC,MAAO,KAAME,SAAjE,mBACA,yCACA,4BAAK3C,EAAK2C,OAAS,EAAI3C,EAAO,0CCW/B4C,MAvEf,WACC,IAAD,EAE4BrB,mBAAU,SAFtC,mBAEU1B,EAFV,KAEgBgD,EAFhB,OAGkCtB,mBAAU,aAH5C,mBAGUZ,EAHV,KAGmBmC,EAHnB,OAI8BvB,mBAAU,MAJxC,mBAIU5B,EAJV,KAIiBoD,EAJjB,KAqCQzB,EAAY,SAAE0B,EAASlD,GAE3BiD,EAAU,CACRxC,IAAKyC,EACLlD,KAAMA,IAERmD,YAAY,WAEVF,EAAU,QACT,MAGL,OAEE,cADA,CACA,sBACE,cAAC,EAAD,CAAQtC,KAAK,aAAaZ,KAAOA,EAAOa,WA/CrB,WAEP,UAATb,GAEHgD,EAAS,QACTC,EAAY,cACZX,SAASe,KAAKzB,MAAMC,gBAAkB,QACtCS,SAASe,KAAKzB,MAAME,MAAQ,QAC5BL,EAAW,sBAAuB,WAClCa,SAASgB,MAAQ,0BAajBN,EAAS,SACTC,EAAY,aACZX,SAASe,KAAKzB,MAAMC,gBAAkB,QACtCS,SAASe,KAAKzB,MAAME,MAAQ,QAC5BL,EAAW,uBAAwB,WACnCa,SAASgB,MAAQ,2BAoBqDxC,QAAUA,IAChF,cAAC,EAAD,CAAOhB,MAAQA,EAAQE,KAAOA,IAM9B,cAAC,EAAD,CAAUyB,UAAYA,EAAYzB,KAAOA,QC3DhCuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAgB,SAM3BgB,K","file":"static/js/main.c45d5a0f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Alert = ( props ) =>\r\n{\r\n    const capitalize = ( text ) =>\r\n    {\r\n        const lower = text.toLowerCase();\r\n        return lower.charAt( 0 ).toUpperCase() + lower.substring( 1 )\r\n    }\r\n    return (\r\n        props.alert && <div className={ `alert alert-${ props.mode === \"light\" ? \"success\" : props.alert.type === \"danger\" ? \"danger\" : props.alert.type === \"success\" ? \"success\" : \"danger\" } alert-dismissible fade show` } role=\"alert\">\r\n            <strong>{ capitalize( props.alert.type ) }</strong> { props.alert.msg }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ( props ) =>\r\n{\r\n    const { mode, home, enableDark, btnText } = props;\r\n\r\n    return (\r\n        <>\r\n            <nav className={ `navbar navbar-expand-lg navbar-${ mode } bg-${ mode }` }>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{ home }</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item nav-link\" href=\"/home\">\r\n                                Home\r\n                            </li>\r\n                            <li className=\"nav-item nav-link\" href=\"/about\">\r\n                                About\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"button\">Search</button>\r\n                        </form> */}\r\n                    </div>\r\n                    <div className={ `form-check form-switch text-${ mode === \"light\" ? \"dark\" : \"light\" }` }>\r\n                        <input className={ `form-check-input bg-${ mode === \"light\" ? \"dark\" : \"light\" }` } type=\"checkbox\" id=\"switch-box\" onClick={ enableDark } />\r\n                        <label htmlFor=\"switch-box\">{ btnText }</label>\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nconst TextForm = ( { mode, showAlert } ) =>\r\n{\r\n    const [ text, setText ] = useState( \"\" )\r\n    const handleUpClick = () =>\r\n    {\r\n        const newText = text.toUpperCase();\r\n        setText( newText )\r\n        showAlert( \"Convert Uppercase\", \"success\" )\r\n    }\r\n\r\n    const handleLoClick = () =>\r\n    {\r\n        const newText = text.toLocaleLowerCase();\r\n        setText( newText )\r\n        showAlert( \"Convert Lowercase\", \"success\" )\r\n    }\r\n\r\n    const handleClearClick = () =>\r\n    {\r\n        const clear = \"\";\r\n        setText( clear )\r\n        showAlert( \"Clear Text Book\", \"danger\" )\r\n    }\r\n\r\n    const handleCopy = () =>\r\n    {\r\n\r\n        const text = document.getElementById( \"area\" )\r\n        if ( text.value === \"\" || text.value === \" \" )\r\n        {\r\n            showAlert( \"You don't type any data!!\", \"Warning\" )\r\n        } else\r\n        {\r\n            text.select()\r\n            navigator.clipboard.writeText( text.value )\r\n            showAlert( \"Data Copped\", \"success\" )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleOnChange = ( event ) =>\r\n    {\r\n        const value = event.target.value;\r\n        setText( value );\r\n    }\r\n\r\n    const handleExtraSpace = () =>\r\n    {\r\n        const newText = text.split( /[ ]+/ )\r\n        setText( newText.join( \" \" ) )\r\n        showAlert( \"Remove Extra Space\", \"success\" )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mb-3\">\r\n                <label htmlFor=\"area\" className=\"form-label\"><h1>Check Your Speed</h1></label>\r\n                <textarea className=\"form-control\" style={ { backgroundColor: mode === \"dark\" ? \"black\" : \"white\", color: mode === \"dark\" ? \"white\" : \"black\" } } id=\"area\" value={ text } rows=\"8\" onChange={ handleOnChange }></textarea>\r\n                <button className=\"btn btn-success mx-3\" onClick={ handleUpClick }>Uppercase</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={ handleLoClick }>Lowercase</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={ handleClearClick }>Clear</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={ handleCopy }>Copy</button>\r\n                <button className=\"btn btn-success mx-3\" onClick={ handleExtraSpace }>Remove Space</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2> <button className=\"btn-info\">{ text === \"\" ? 0 : text.split( \" \" ).length }</button> word type <button className=\"btn-info\">{ text.length }</button> character type</h2>\r\n                <h3> <button className=\"btn-warning\">{ 0.008 * text.split( \" \" ).length }</button> read minutes</h3>\r\n                <h2>Preview</h2>\r\n                <p>{ text.length > 0 ? text : \"Please type text & see Preview\" }</p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TextForm;","import React, { useState } from \"react\";\n// import About from \"./components/About/About\";\nimport Alert from \"./components/Alert/Alert\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TextForm from \"./components/TextForm/TextForm\";\n// import\n// {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\nfunction App ()\n{\n\n  const [ mode, setMode ] = useState( \"light\" )\n  const [ btnText, setBtnText ] = useState( \"Dark Mode\" )\n  const [ alert, setAlert ] = useState( null )\n  const handleDarkMode = () =>\n  {\n    if ( mode === \"light\" )\n    {\n      setMode( \"dark\" )\n      setBtnText( \"Light Mode\" )\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      showAlert( \"Dark Mode is Enable\", \"success\" )\n      document.title = \"TextUtils - Dark Mode\"\n\n      // setInterval( () =>\n      // {\n      //   document.title = \"TextUtils - Dark Mode\"\n      // }, 2000 );\n      // setInterval( () =>\n      // {\n      //   document.title = \"Install - TextUtils\"\n      // }, 1500 );\n\n    } else\n    {\n      setMode( \"light\" )\n      setBtnText( \"Dark Mode\" )\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert( \"Light Mode is Enable\", \"success\" )\n      document.title = \"TextUtils - Light Mode\"\n\n    }\n  }\n\n  const showAlert = ( message, type ) =>\n  {\n    setAlert( {\n      msg: message,\n      type: type,\n    } )\n    setTimeout( () =>\n    {\n      setAlert( null )\n    }, 2000 );\n  }\n\n  return (\n    // <Router>\n    <>\n      <Navbar home=\"Text Utils\" mode={ mode } enableDark={ handleDarkMode } btnText={ btnText } />\n      <Alert alert={ alert } mode={ mode } />\n      {/* <Switch> */ }\n      {/* <Route path=\"/about\"> */ }\n      {/* <About mode={ mode } /> */ }\n      {/* </Route> */ }\n      {/* <Route path=\"/home\"> */ }\n      <TextForm showAlert={ showAlert } mode={ mode } />\n      {/* </Route> */ }\n      {/* <Route exact path=\"/\"> */ }\n      {/* <TextForm showAlert={ showAlert } mode={ mode } /> */ }\n      {/* </Route> */ }\n      {/* </Switch> */ }\n    </>\n    // </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}